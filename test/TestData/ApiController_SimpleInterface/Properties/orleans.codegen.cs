//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace GrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PrefsGrainFactory
    {
        

                        public static GrainInterfaces.IPrefsGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GrainInterfaces.IPrefsGrain), -1152396051, primaryKey));
                        }

                        public static GrainInterfaces.IPrefsGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GrainInterfaces.IPrefsGrain), -1152396051, primaryKey, grainClassNamePrefix));
                        }

            public static GrainInterfaces.IPrefsGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PrefsGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("GrainInterfaces.GrainInterfaces.IPrefsGrain")]
        internal class PrefsGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, GrainInterfaces.IPrefsGrain
        {
            

            public static GrainInterfaces.IPrefsGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (GrainInterfaces.IPrefsGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(GrainInterfaces.IPrefsGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PrefsGrainReference(gr);}, grainRef, -1152396051);
            }
            
            protected internal PrefsGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PrefsGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1152396051;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "GrainInterfaces.GrainInterfaces.IPrefsGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PrefsGrainReference input = ((PrefsGrainReference)(original));
                return ((PrefsGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PrefsGrainReference input = ((PrefsGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PrefsGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PrefsGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task GrainInterfaces.IPrefsGrain.SetValue(System.Collections.Generic.KeyValuePair<String,String> @entry)
            {

                return base.InvokeMethodAsync<object>(-562543526, new object[] {@entry} );
            }
            
            System.Threading.Tasks.Task<string> GrainInterfaces.IPrefsGrain.GetValue(string @key)
            {

                return base.InvokeMethodAsync<System.String>(-1376685924, new object[] {@key} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, string>> GrainInterfaces.IPrefsGrain.GetAllEntries()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IDictionary<System.String,System.String>>(852692164, null );
            }
            
            System.Threading.Tasks.Task GrainInterfaces.IPrefsGrain.ClearValues()
            {

                return base.InvokeMethodAsync<object>(-291970914, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("GrainInterfaces.GrainInterfaces.IPrefsGrain", -1152396051)]
    internal class PrefsGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1152396051;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1152396051:  // IPrefsGrain
                        switch (methodId)
                        {
                            case -562543526: 
                                return ((IPrefsGrain)grain).SetValue((System.Collections.Generic.KeyValuePair<String,String>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1376685924: 
                                return ((IPrefsGrain)grain).GetValue((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 852692164: 
                                return ((IPrefsGrain)grain).GetAllEntries().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -291970914: 
                                return ((IPrefsGrain)grain).ClearValues().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1152396051:  // IPrefsGrain
                    switch (methodId)
                    {
                        case -562543526:
                            return "SetValue";
                    case -1376685924:
                            return "GetValue";
                    case 852692164:
                            return "GetAllEntries";
                    case -291970914:
                            return "ClearValues";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
